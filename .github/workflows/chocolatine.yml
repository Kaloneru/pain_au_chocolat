name: chocolatine
on:
  push:
    branches-ignore:
      - 'ga-ignore-**'
  pull_request:
    branches-ignore:
      - 'ga-ignore-**'

env:
  MIRROR_URL: git@github.com:EpitechPromo2026/B-DOP-200-PAR-2-1-chocolatine-leo.l-huillier.git
  EXECUTABLES: fazzbizz, push_swap
  
jobs:

  check_repository_cleanliness:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: check_repository_cleanliness
        run: |
            ILLEGAL_FILES_FOUND=0
            ILLEGAL_FILES="$(find -iname "*~" -o -iname "*pain_au_chocolat*" -o -iname "*#*" -o -iname "*.exe" -o -iname "*.sh" -o -iname "*.so" -o -iname "*.o" -o -iname "*.gcda" -o -iname "*.gcov" -o -iname "tmp/" -o -iname "*.a" -o -iname "*-;" -o -iname "*.gcno" -type f,d)"
            for FILE in $ILLEGAL_FILES
            do
              echo "::error file=$FILE,line=1,endLine=0,title=Unwanted file detected::$FILE"
              ILLEGAL_FILES_FOUND=1
            done
            - if: 'ILLEGAL_FILES_FOUND = 1'
              exit 1

  check_program_compilation:
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    steps:                                 
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: launch_make
        run: make
      - name: launche_make_clean
        run: make clean
      - name: test_compilation
        run: |
          TEST=0
          COMPIL=$(echo ${{ env.EXECUTABLES}} | tr "," "\n")
          for FILE in $COMPIL
          do
            TEST = test -x $FILE
            -if: TEST = 1
              exit 1
          done

  run_tests
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    steps:                                 
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name run test
        run: make test_run


  push_to_mirror:
    runs-on: ubuntu-latest
    steps:                                 
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            ${{ env.MIRROR_URL}}
          ssh_private_key:               
            ${{ secrets.GIT_SSH_PRIVATE_KEY }}